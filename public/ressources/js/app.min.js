function get_cookie(name) {
	var match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
	if (match) return match[2];
}

function hideLanguageChoiceBanner() {

	document.getElementById('language-banner').style.display = 'none';
	document.cookie = "language-banner=hide; path=/";
}

function hideLanguageChoiceBannerIfCookie() {

	if (get_cookie('language-banner') !== undefined) {

		document.getElementById('language-banner').style.display = 'none';
	}
}

function Login(url, texts) {

	this.url = url;

	this.textLogin = texts.textLogin;
	this.textUnexpectedError = texts.textUnexpectedError;

	this.fields = document.getElementById("fields");
	this.alertBox = document.getElementById("alert_box");
	this.alertText = document.getElementById("text_alert");
	this.formData = document.getElementById("login_form");
	this.passwordField = document.getElementById("password");
	this.submitButton = document.getElementById("butn_submit");

	this.submit = function() {

		this.submitButton.innerHTML = "<span class=\"spinner-border spinner-border-sm\"></span> Loading..";
		this.submitButton.disabled = true;

		this.fields.classList.remove("invalid");

		_this = this;

		var xhttp = new XMLHttpRequest();
		xhttp.onreadystatechange = function() {

			if (this.readyState == 4) {

				if (this.status == 200) {

					result = JSON.parse(this.responseText);	

					if (result['succes'] == true) {
						window.location.href = _this.url + "/home";
						return;
					}

					_this.passwordField.focus();

					_this.alertBox.classList.add("alert-warning");
					_this.alertText.innerHTML = result['message'];

					_this.alertBox.style.visibility = 'visible';
				}
				else {

					_this.alertBox.classList.add("alert-danger");
					_this.alertText.innerHTML = _this.textUnexpectedError + " (Error: E1001)";

					_this.alertBox.style.visibility = 'visible';
				}

				_this.submitButton.innerHTML = _this.textLogin;
				_this.submitButton.disabled = false;

			}

		}

		xhttp.open("POST", this.url + "/call/login/login", true);
		xhttp.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
		xhttp.send(new FormData(this.formData));

		this.passwordField.value = '';

		return false;
	}
}

function Register(url, texts) {

	this.url = url;

	this.texts = texts

	this.alertBox = document.getElementById("alert_box");
	this.alertText = document.getElementById("text_alert");

	this.fieldUsername = document.getElementById('username');
	this.textUsername = document.getElementById('message_username');

	this.fieldPassword = document.getElementById('password');
	this.textPassword = document.getElementById('message_password');

	this.fieldPasswordConfirm = document.getElementById('password_confirm');
	this.textPasswordConfirm = document.getElementById('message_password_confirm');

	this.submitButton = document.getElementById("butn_submit");
	this.formData = document.getElementById('register_form');

	this.validUsername = false;
	this.validPassword = false;
	this.validConfirm = false;

	this.submit = function() {

		if (!this.validUsername || !this.validPassword || !this.validConfirm) {

			this.alertBox.classList.remove("alert-danger");
			this.alertBox.classList.add("alert-warning");
			this.alertText.innerHTML = this.texts.textErrorSomething;

			this.alertBox.style.visibility = 'visible';
			return;
		}

		this.submitButton.innerHTML = "<span class=\"spinner-border spinner-border-sm\"></span> Loading..";
		this.submitButton.disabled = true;

		_this = this;

		var xhttp = new XMLHttpRequest();
		xhttp.onreadystatechange = function() {

			if (this.readyState == 4) {	

				if (this.status == 200) {

					result = JSON.parse(this.responseText);		

					if (result['success'] == true) {
						window.location.href = _this.url + "/login?register=true&username=" + encodeURIComponent(_this.fieldUsername.value);
						return;
					}

					_this.alertBox.classList.add("alert-warning");
					_this.alertText.innerHTML = result['message'];

					_this.alertBox.style.visibility = 'visible';
				}
				else {

					_this.alertBox.classList.remove("alert-warning");
					_this.alertBox.classList.add("alert-danger");
					_this.alertText.innerHTML = _this.texts.textUnexpectedError + " (Error: E1002)";

					_this.alertBox.style.visibility = 'visible';
				}

				_this.submitButton.innerHTML = _this.texts.textRegister;
				_this.submitButton.disabled = false;

			}

		}

		xhttp.open("POST", this.url + "/call/login/register", true);
		xhttp.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
		xhttp.send(new FormData(this.formData));
	}

	this.ValidateUsername = function() {

		if (this.fieldUsername.value.length < 3) {

			this.textUsername.classList.remove("text-success");
			this.textUsername.classList.add("text-danger");
			this.textUsername.innerHTML = this.texts.textUsernameCharacterMin;

			this.fieldUsername.classList.add("border-danger");
			
			this.validUsername = false;
			return;

		}

		if (this.fieldUsername.value.length > 30) {

			this.textUsername.classList.remove("text-success");
			this.textUsername.classList.add("text-danger");
			this.textUsername.innerHTML = this.texts.textUsernameCharacterMax;

			this.fieldUsername.classList.add("border-danger");
			
			this.validUsername = false;
			return;

		}

		_this = this;

		var xhttp = new XMLHttpRequest();
		xhttp.onreadystatechange = function() {

			if (this.readyState == 4) {

				if (this.status == 200) {

					result = JSON.parse(this.responseText);

					if (result == true) {

						_this.fieldUsername.classList.add("border-danger");
						_this.textUsername.classList.remove("text-success");
						_this.textUsername.classList.add("text-danger");

						_this.textUsername.innerHTML = _this.texts.textUsernameExist;

						_this.validUsername = false;
						return;

					}
					
					_this.fieldUsername.classList.remove("border-danger");
					_this.fieldUsername.classList.add("border-success");

					_this.textUsername.classList.remove("text-danger");
					_this.textUsername.classList.add("text-success");
					_this.textUsername.innerHTML = _this.texts.textUsernameNotExist;

					_this.validUsername = true;

				}
				else {

					_this.alertBox.classList.add("alert-danger");
					_this.alertBox.style.visibility='visible';

					_this.alertText.innerHTML = _this.texts.textUnexpectedError + " (Error: E1003)";

				}

			}

		}

		xhttp.open("GET", this.url + "/call/login/username?username=" + this.fieldUsername.value, true);
		xhttp.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
		xhttp.send();

		this.validUsername = _this.validUsername;

	}

	this.ValidatePassword = function() {

		this.textPassword.classList.remove("text-success");
		this.textPassword.classList.remove("text-danger");

		var count = 0;

		this.textPassword.innerHTML = this.texts.textPasswordCharacter + "<br/><span id=\"password-low\">&emsp;- " + this.texts.textPasswordCharacterLow + "</span><br/><span id=\"password-up\">&emsp;- " + this.texts.textPasswordCharacterUp + "</span><br/><span id=\"password-num\">&emsp;- " + this.texts.textPasswordCharacterNum + "</span><br/><span id=\"password-spe\">&emsp;- " + this.texts.textPasswordCharacterSpecial + "</span><br/><span id=\"password-count\">&emsp;- " + this.texts.textPasswordCharacterCount +"</span>";

		if (this.fieldPassword.value.length > 0) {
			this.fieldPassword.classList.add("border-danger");
			this.textPassword.classList.add("text-danger");

			//lower case
			if (this.fieldPassword.value.match(/[a-z]/)) {

				document.getElementById("password-low").classList.add("text-success");
				count++;
			}

			//upper case
			if (this.fieldPassword.value.match(/[A-Z]/)) {

				document.getElementById("password-up").classList.add("text-success");
				count++;
			}

			//number case
			if (this.fieldPassword.value.match(/[0-9]/)) {

				document.getElementById("password-num").classList.add("text-success");
				count++;
			}

			//special case
			if (this.fieldPassword.value.match(/[^a-zA-Z0-9 ]+/)) {

				document.getElementById("password-spe").classList.add("text-success");
				count++;
			}

			//count 8
			if (this.fieldPassword.value.length >= 8) {

				document.getElementById("password-count").classList.add("text-success");
				count++;
			}

			if (count == 5) {

				this.fieldPassword.classList.remove("border-danger");
				this.textPassword.classList.remove("text-danger");

				this.fieldPassword.classList.add("border-success");
				this.textPassword.classList.add("text-success");

				this.textPassword.innerHTML = this.texts.textPasswordCharacterValid;

				this.validPassword = true;
			}
			else {
				this.validPassword = false;
			}
		}
		else {
			this.validPassword = false;
		}
	}

	this.ValidatePasswordConfirm = function() {

		if (this.fieldPasswordConfirm.value.length > 0) {

			this.fieldPasswordConfirm.classList.add("border-danger");
			this.textPasswordConfirm.classList.add("text-danger");

			if (this.fieldPassword.value === this.fieldPasswordConfirm.value) {

				this.fieldPasswordConfirm.classList.remove("border-danger");
				this.textPasswordConfirm.classList.remove("text-danger");

				this.fieldPasswordConfirm.classList.add("border-success");
				this.textPasswordConfirm.classList.add("text-success");

				this.textPasswordConfirm.innerHTML = this.texts.textPasswordConfirmValid;

				this.validConfirm = true;
			}
			else {

				this.textPasswordConfirm.innerHTML = this.texts.textPasswordConfirmNotValid;
				this.validConfirm = false;

			}

		}
		else {
			this.validConfirm = false;
		}
	}

}

function ResetPassword(url, texts) {

	this.url = url;
	this.texts = texts;

	this.alertBox = document.getElementById('alert_box');
	this.alertText = document.getElementById('text_alert');

	this.formData = document.getElementById('password_reset_form');

	this.submitButton = document.getElementById("butn_submit");

	this.submit = function() {

		this.submitButton.innerHTML = "<span class=\"spinner-border spinner-border-sm\"></span> Loading..";
		this.submitButton.disabled = true;

		_this = this;

		var xhttp = new XMLHttpRequest();
		xhttp.onreadystatechange = function() {

			if (this.readyState == 4) {	

				_this.alertBox.classList.remove("alert-danger", "alert-warning", "alert-success");

				if (this.status == 200) {

					result = JSON.parse(this.responseText);		

					if (result['success'] == true) {

						_this.alertBox.classList.add("alert-success");
					}
					else {

						_this.alertBox.classList.add("alert-warning");
					}

					_this.alertText.innerHTML = result['message'];
					
				}
				else {

					_this.alertBox.classList.add("alert-danger");
					_this.alertText.innerHTML = _this.texts.textUnexpectedError + " (Error: E1010)";

				}

				_this.alertBox.style.visibility = 'visible';

				_this.submitButton.innerHTML = _this.texts.textButton;
				_this.submitButton.disabled = false;

			}

		}

		xhttp.open("POST", this.url + "/call/login/reset-password", true);
		xhttp.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
		xhttp.send(new FormData(this.formData));

		return false;
	}

	this.ResetPassword = function() {
		
		this.submitButton.innerHTML = "<span class=\"spinner-border spinner-border-sm\"></span> Loading..";
		this.submitButton.disabled = true;

		_this = this;

		var xhttp = new XMLHttpRequest();
		xhttp.onreadystatechange = function() {

			if (this.readyState == 4) {	

				_this.alertBox.classList.remove("alert-danger", "alert-warning");

				if (this.status == 200) {

					result = JSON.parse(this.responseText);		

					if (result['success'] == true) {

						window.location.href = _this.url + "/login?reset=true&username=" + encodeURIComponent(result['username']);
						return;
					}
					else {

						_this.alertBox.classList.add("alert-warning");
					}

					_this.alertText.innerHTML = result['message'];
					
				}
				else {

					_this.alertBox.classList.add("alert-danger");
					_this.alertText.innerHTML = _this.texts.textUnexpectedError + " (Error: E1011)";

				}

				_this.alertBox.style.visibility = 'visible';

				_this.submitButton.innerHTML = _this.texts.textButton;
				_this.submitButton.disabled = false;

			}
		}

		xhttp.open("POST", this.url + "/call/login/reset-password-link", true);
		xhttp.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
		xhttp.send(new FormData(this.formData));

		return false;
	}
}

function Settings(url, texts) {

	this.url = url;
	this.textButton = texts.textButton;

	this.requestedPage = null;

	this.modal = document.getElementById("myModal");

	this.alertBox = document.getElementById('alert_box');
	this.alertText = document.getElementById('alert_text');

	this.passwordField = document.getElementById("password");
	this.passwordButton = document.getElementById("butn_submit");
	this.passwordForm  = document.getElementById('verify_form');

	this.saveLoader = null;
	this.loader = "<div class=\"spinner-border text-white\" style=\"width: 1.5rem; height: 1.5rem;\"></div>";

	this.acceptNewClick = true;

	this.click = function(argument) {
		
		if (!this.acceptNewClick) return;

		this.acceptNewClick = false;

		loader = document.getElementById(argument + "_loader");

		this.saveLoader = loader.innerHTML;
		loader.innerHTML = this.loader;

		if (argument == 'logout') return this.logout(false);

		this.requestedPage = argument;

		_this = this;

		var xhttp = new XMLHttpRequest();
		xhttp.onreadystatechange = function() {

			if (this.readyState == 4) {

				if (this.status == 200) {

					result = JSON.parse(this.responseText);

					if (!result) {

						if (argument == 'logout_all') {

							return _this.logout(true)
						}
						else {

							window.location.href = _this.url + "/settings/" + argument;
						}
					}
					else {

						_this.modal.style.display = 'block';
						loader.innerHTML = _this.saveLoader;
						_this.acceptNewClick = true;
					}
				}
				else {

					_this.alertText.innerHTML = '(Error: E1004)';
					_this.alertBox.style.display = 'block';

					loader.innerHTML = _this.saveLoader;
					_this.acceptNewClick = true;
				}

			}

		}

		xhttp.open("GET", this.url + "/call/login/cookie", true);
		xhttp.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
		xhttp.send();

		this.acceptNewClick = _this.acceptNewClick;
	}

	this.logout = function(all) {

		_this = this;

		var xhttp = new XMLHttpRequest();
		xhttp.onreadystatechange = function() {

			if (this.readyState == 4) {

				if (this.status == 200) {

					window.location.href = _this.url + "/login";
				}
				else {

					_this.alertText.innerHTML = '(Error: E1005)';
					_this.alertBox.style.display = 'block';

					loader.innerHTML = _this.saveLoader;
					_this.acceptNewClick = true;
				}
			}
		}

		xhttp.open("GET", this.url + "/call/login/logout?all=" + all, true);
		xhttp.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
		xhttp.send();

		this.acceptNewClick = _this.acceptNewClick;
	}

	this.verifyPassword = function() {

		this.passwordButton.innerHTML = "<span class=\"spinner-border spinner-border-sm\"></span> Loading..";
		this.passwordButton.disabled = true;

		this.passwordField.classList.remove("invalid");

		_this = this;

		var xhttp = new XMLHttpRequest();
		xhttp.onreadystatechange = function() {

			if (this.readyState == 4) {

				if (this.status == 200) {

					result = JSON.parse(this.responseText);

					if (result) {

						if (_this.requestedPage == 'logout_all') {
							_this.logout(true);
						}
						else {
							window.location.href = _this.url + "/settings/" + _this.requestedPage;
						}
					}
					else {
						_this.passwordField.classList.add("invalid");
						_this.passwordField.focus();
					}
				}
				else {

					_this.modal.style.display = 'none';
					_this.alertText.innerHTML = '(Error: E1006)';
					_this.alertBox.style.display = 'block';
				}

				_this.passwordButton.innerHTML = _this.textButton;
				_this.passwordButton.disabled = false;
			}
		}
		xhttp.open("POST", "/call/login/verifyPassword", true);
		xhttp.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
		xhttp.send(new FormData(this.passwordForm));

		this.passwordField.value = '';

		return false;
	}
}

function SettingsMail(url, texts) {

	this.url = url;
	this.texts = texts;

	this.divMail = document.getElementById("message_mail");

	this.mainText = document.getElementById('main_text');

	this.mailForm = document.getElementById("new_mail_form");
	this.mailField = document.getElementById("mail");
	this.passwordField = document.getElementById("password");
	this.submitButton = document.getElementById("butn_submit");

	this.alertBox = document.getElementById('alert_box');
	this.alertText = document.getElementById('text_alert');

	this.ValidateEmail = function() {

		if (this.mailField.value.length > 0) {

			this.divMail.classList.add("text-danger");

			if (this.mailField.value.match(/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/)) {

				this.divMail.classList.remove("text-danger");
				this.divMail.classList.add("text-success");
				this.divMail.innerHTML = this.texts.mailValid;
				return true;

			}
			else {

				this.divMail.innerHTML = this.texts.mailNotValid;
				return false;

			}
		}
		else {

			return false;
		}
	}

	this.submit = function() {

		this.submitButton.innerHTML = "<span class=\"spinner-border spinner-border-sm\"></span> Loading..";
		this.submitButton.disabled = true;

		_this = this;

		var xhttp = new XMLHttpRequest();

		xhttp.onreadystatechange = function() {

			if (this.readyState == 4) {

				_this.alertBox.classList.remove("alert-danger", "alert-warning", "alert-success");

				if (this.status == 200) {

					result = JSON.parse(this.responseText);

					if (result['success'] == true) {

						_this.mailField.value = '';

						_this.alertBox.classList.add("alert-success");
						_this.mainText.innerHTML = result['new_text'];
					}
					else {

						_this.alertBox.classList.add("alert-warning");
					}

					_this.alertText.innerHTML = result['message'];
				}
				else {

					_this.alertBox.classList.add("alert-danger");
					_this.alertText.innerHTML = _this.texts.textUnexpectedError + ' (Error: E1009)';

				}

				_this.alertBox.style.display = 'block';

				_this.submitButton.innerHTML = _this.texts.buttonText;
				_this.submitButton.disabled = false;
			}
		}

		xhttp.open("POST", "/call/login/updateEmail", true);
		xhttp.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
		xhttp.send(new FormData(this.mailForm));

		this.passwordField.value = '';

		return false;
	}

}

